#BlueJ class context
comment0.params=file\ menu\ fileName
comment0.target=Plane(java.io.FileInputStream,\ Menu,\ java.lang.String)
comment0.text=\ \ \r\n\ \ constructor\r\n\ \ @param\ <file>\ \r\n\ \ @param\ <menu\:\ pass\ to\ system>\r\n\ \ @param\ <fileName\:\ pass\ to\ recording\ system>\r\n
comment1.params=
comment1.target=void\ constructSeats()
comment1.text=\ \ \r\n\ \ This\ method\ is\ to\ put\ seats\ all\ together\ into\ 2D\ array\r\n
comment10.params=oneColOfSeats\ indexOfSeat
comment10.target=char\ oneSeat(java.lang.String,\ int)
comment10.text=\ \ \r\n\ \ This\ method\ is\ to\ split\ one\ row\ seats\ to\ single\ seat\r\n\ \ @param\ <oneColOfSeats\:\ String\ value\ of\ one\ row\ seats>\r\n\ \ @param\ <indexOfSeat\:\ index\ of\ the\ char\ in\ the\ string,\ it\ will\ be\ increasing\ in\ the\ loop>\r\n\ \ @return\ <char\ type\ value\:\ the\ letter\ of\ single\ seat>\r\n
comment11.params=
comment11.target=java.lang.String\ oneColOfseats()
comment11.text=\ \ \r\n\ \ This\ method\ is\ to\ scan\ one\ row\ seats\r\n\ \ @return\ <String\ type\ value\:\ one\ row\ seats>\r\n
comment12.params=
comment12.target=boolean\ isReachTheLastSeat()
comment12.text=\ \ \r\n\ \ This\ method\ is\ to\ make\ sure\ reach\ the\ last\ row\ of\ seats\r\n\ \ @return\ <boolean\ type\ value\:\ if\ next\ token\ is\ number>\r\n
comment13.params=
comment13.target=boolean\ hasNextRowSeats()
comment13.text=\ \ \r\n\ \ This\ method\ is\ to\ make\ sure\ to\ have\ next\ row\ of\ seats\r\n\ \ @return\ <boolean\ type\ value\:\ if\ has\ next\ token>\r\n
comment2.params=length
comment2.target=int\ lengthOfCol(int)
comment2.text=\ \ \r\n\ \ This\ method\ is\ to\ get\ the\ column\ has\ most\ seats,\ return\ number\ back\r\n\ \ The\ number\ will\ be\ passed\ into\ system\ and\ menu\ class\ for\ printing\ the\ frame\ of\ seats\r\n\ \ @param\ <file>\ \r\n\ \ @param\ <menu\:\ pass\ to\ system>\r\n\ \ @param\ <fileName\:\ pass\ to\ recording\ system>\r\n\ \ @return\ <length\:\ just\ return\ the\ parameter\ while\ get\ the\ max\ length>\r\n
comment3.params=seatsOneRow\ numOfSeatsOneRow
comment3.target=void\ installAllRows(java.lang.String,\ int)
comment3.text=\ \ \r\n\ \ This\ method\ is\ to\ put\ one\ row\ seats\ into\ 2D\ array\r\n\ \ Becasue\ the\ number\ of\ seats\ in\ one\ row\ are\ different\r\n\ \ @param\ <seatsOneRow\:\ a\ String\ of\ seats\ in\ one\ row\ from\ the\ file>\ \r\n\ \ @param\ <numOfSeatsOneRow\:\ different\ number\ of\ seats\ in\ one\ row>\r\n
comment4.params=seatsOneRow\ oneRow
comment4.target=Seat[]\ installSeatsOnEachRow(java.lang.String,\ Seat[])
comment4.text=\ \ \r\n\ \ This\ method\ is\ to\ put\ single\ seat\ into\ each\ 1D\ array\r\n\ \ Becasue\ the\ number\ of\ seats\ in\ one\ row\ are\ different\r\n\ \ @param\ <seatsOneRow\:\ a\ String\ of\ seats\ in\ one\ row\ from\ the\ file>\ \r\n\ \ @param\ <oneRow\:\ a\ 1D\ array\ has\ one\ row\ seats>\r\n\ \ @return\ <oneRow\:\ the\ array\ contains\ one\ row\ seats,\ each\ elements\ in\ this\ 1D\ array\ has\ pointed\ to\ seat\ objects>\r\n
comment5.params=
comment5.target=void\ updateNewDataInfomationOnPlane()
comment5.text=\ \ \r\n\ \ This\ method\ is\ to\ put\ updated\ information\ into\ history\ array\r\n\ \ In\ order\ to\ start\ the\ system\ at\ the\ time\ end\ last\ time\r\n\ \ If\ there\ is\ no\ record,\ then\ history\ array\ will\ contain\ null,\ the\ system\ will\ not\ read\ it\ unless\ new\ booking\ coming\r\n\ \ And\ the\ dimension\ of\ history\ array\ will\ be\ the\ total\ seats\ in\ the\ plane\r\n
comment6.params=
comment6.target=Person\ updatePersonInformation()
comment6.text=\ \ \r\n\ \ This\ method\ is\ to\ scan\ the\ persons'\ name,\ age\ and\ return\ person\ object\r\n\ \ @return\ <new\ Person(name,\ age)>\r\n
comment7.params=
comment7.target=Food\ updateFoodOrder()
comment7.text=\ \ \r\n\ \ This\ method\ is\ to\ scan\ the\ foods'\ name\r\n\ \ @return\ <new\ Food(name)>\r\n
comment8.params=coordinateOfSeats
comment8.target=void\ updateSeatBooked(int[])
comment8.text=\ \ \r\n\ \ This\ method\ is\ to\ scan\ the\ row\ and\ col\ number,\ elements\ in\ the\ array\ of\ coordinateOfSeats\ will\ change\r\n\ \ @param\ <coordinateOfSeats>\r\n
comment9.params=
comment9.target=int\ showRow()
comment9.text=\ \ \r\n\ \ This\ method\ is\ to\ scan\ total\ row\ of\ plane\ has\r\n\ \ @return\ <index\:\ just\ need\ return\ a\ value\ for\ another\ method\ use,\ avoid\ multiple\ return>\r\n
numComments=14
