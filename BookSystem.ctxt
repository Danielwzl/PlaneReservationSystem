#BlueJ class context
comment0.params=menu\ seats\ maxLengthOfCol\ fileName\ history\ numOfBooking
comment0.target=BookSystem(Menu,\ Seat[][],\ int,\ java.lang.String,\ BookingHistory[],\ int)
comment0.text=\ \ \r\n\ \ constructor\r\n\ \ @param\ <seats>\ \r\n\ \ @param\ <menu>\r\n\ \ @param\ <maxLengthOfCol\:\ the\ most\ number\ of\ seats\ from\ each\ row>\r\n\ \ @param\ <fileName\:\ pass\ to\ RecordingSystem>\r\n\ \ @param\ <history>\r\n\ \ @param\ <numOfBooking>\r\n
comment1.params=
comment1.target=void\ initialSystem()
comment1.text=\ \ \r\n\ \ This\ method\ is\ to\ start\ the\ system\r\n
comment10.params=userPreference
comment10.target=void\ showSeatsAvailable(char)
comment10.text=\r\n\ \ Function\ Overload\r\n\ \ This\ method\ is\ to\ show\ seat\ with\ user\ preferences\r\n\ \ @param\ <userPreference>\r\n
comment11.params=
comment11.target=void\ showSeatsAvailable()
comment11.text=\ \ \r\n\ \ This\ method\ is\ to\ show\ seat\ reservation\ on\ the\ screen\r\n
comment12.params=
comment12.target=void\ bookSeats()
comment12.text=\ \ \r\n\ \ This\ method\ is\ to\ start\ book\ function\ if\ matching\ the\ condition\r\n
comment13.params=
comment13.target=void\ cancelSeats()
comment13.text=\ \ \r\n\ \ This\ method\ is\ to\ start\ cancel\ function\ if\ matching\ the\ condition\r\n
comment14.params=
comment14.target=void\ modifySeats()
comment14.text=\ \ \r\n\ \ This\ method\ is\ to\ start\ modify\ function\ if\ matching\ the\ condition\r\n
comment15.params=
comment15.target=void\ book()
comment15.text=\ \ \r\n\ \ This\ method\ is\ to\ store\ new\ booking\ information\ into\ history\r\n
comment16.params=
comment16.target=void\ cancel()
comment16.text=\ \ \r\n\ \ This\ method\ is\ to\ delete\ booking\ information\ from\ history\r\n
comment17.params=
comment17.target=void\ modify()
comment17.text=\ \ \r\n\ \ This\ method\ is\ to\ change\ booking\ information\ into\ history\r\n
comment18.params=modifiedIndex
comment18.target=void\ showInfoAfterModify(int)
comment18.text=\ \ \r\n\ \ This\ method\ is\ to\ show\ confirmation\ page\ and\ update\ time\r\n\ \ @param\ <modifiedIndex\:\ the\ index\ in\ the\ history\ that\ user\ want\ to\ modify\ at>\ \r\n
comment19.params=modifiedIndex
comment19.target=boolean\ isUserMadeChange(int)
comment19.text=\r\n\ \ This\ method\ is\ to\ ask\ user\ make\ change\ and\ store\ them\ into\ history,\ return\ true\ if\ they\ make\ any\ change\r\n\ \ @param\ <modifiedIndex>\r\n\ \ @return\ <true\ if\ user\ made\ any\ change>\r\n
comment2.params=
comment2.target=void\ mainMenuStart()
comment2.text=\ \ \r\n\ \ This\ method\ is\ to\ generating\ the\ each\ option\ on\ the\ menu\r\n
comment20.params=modifiedIndex
comment20.target=boolean\ changePersonalInfo(int)
comment20.text=\r\n\ \ This\ method\ is\ to\ ask\ user\ make\ change\ and\ store\ them\ into\ history\r\n\ \ return\ true\ if\ they\ make\ change\ of\ personal\ information\r\n\ \ @param\ <modifiedIndex>\r\n\ \ @return\ <true\ if\ user\ made\ any\ change>\r\n
comment21.params=modifiedIndex
comment21.target=boolean\ changeSeat(int)
comment21.text=\r\n\ \ This\ method\ is\ to\ ask\ user\ make\ change\ and\ store\ them\ into\ history\r\n\ \ return\ true\ if\ they\ make\ change\ of\ seat\r\n\ \ @param\ <modifiedIndex>\r\n\ \ @return\ <true\ if\ user\ made\ any\ change>\r\n
comment22.params=modifiedIndex
comment22.target=void\ reChooseSeat(int)
comment22.text=\r\n\ \ This\ method\ is\ to\ ask\ user\ choose\ new\ seat\r\n\ \ @param\ <modifiedIndex>\r\n
comment23.params=modifiedIndex
comment23.target=boolean\ changeMeal(int)
comment23.text=\r\n\ \ This\ method\ is\ to\ ask\ user\ make\ change\ and\ store\ them\ into\ history\r\n\ \ return\ true\ if\ they\ make\ change\ of\ meal\r\n\ \ @param\ <modifiedIndex>\r\n\ \ @return\ <true\ if\ user\ made\ any\ change>\r\n
comment24.params=modifiedIndex
comment24.target=void\ newSeatReplacement(int)
comment24.text=\ \r\n\ \ This\ method\ is\ to\ store\ their\ new\ seat\r\n\ \ @param\ <modifiedIndex>\ \r\n
comment25.params=
comment25.target=BookingHistory\ savingHistory()
comment25.text=\ \ \r\n\ \ This\ method\ is\ the\ actual\ function\ to\ store\ booking\ information\ into\ history\ array\r\n\ \ @return\ <BookingHistory\:\ current\ single\ element\ from\ history\ array>\r\n
comment26.params=
comment26.target=void\ removeBooking()
comment26.text=\ \ \r\n\ \ This\ method\ is\ to\ delete\ the\ booking\ information\ from\ the\ history\r\n\ \ When\ people\ cancel\ the\ book,\ the\ element\ (at\ the\ index\ people\ will\ cancel\ in\ the\ array)\ will\ be\ the\ element\ at\ the\ one\ after\r\n\ \ So,\ moving\ the\ element\ after\ the\ certain\ point\ to\ the\ pervious\ spot,\ in\ order\ to\ make\ sure\ there\ is\ no\ null\ in\ the\ middle.\ \r\n
comment27.params=
comment27.target=int[]\ foodOrderCounter()
comment27.text=\ \ \r\n\ \ This\ method\ is\ to\ count\ the\ amount\ of\ each\ food\ order\r\n\ \ @return\ <counter\:\ the\ array\ that\ ending\ page\ will\ use\ it>\r\n
comment28.params=food
comment28.target=int\ indexOf(Food)
comment28.text=\ \ \r\n\ \ This\ method\ is\ to\ get\ index\ of\ each\ food\ order\ from\ the\ history\ in\ the\ FOOT_LIST\r\n\ \ Because\ it\ will\ be\ easy\ to\ count\ the\ number\ of\ each\ food\ order\r\n\ \ @param\ <food>\ \r\n\ \ @return\ <i\:\ index\ in\ the\ FOOT_LIST>\r\n
comment29.params=
comment29.target=boolean\ isValidForCancel()
comment29.text=\ \ \r\n\ \ This\ method\ is\ to\ check\ if\ valid\ to\ cancel\r\n\ \ @return\ <true\ if\ personal\ information\ and\ seat\ matches\ any\ information\ in\ history>\r\n
comment3.params=
comment3.target=void\ displayBooking()
comment3.text=\r\n\ \ This\ method\ is\ to\ display\ all\ booking\ information\ on\ the\ screen\r\n
comment30.params=row\ col
comment30.target=boolean\ isOccupied(int,\ int)
comment30.text=\r\n\ \ Function\ Overload\r\n\ \ For\ check\ user\ preference\r\n\ \ This\ method\ is\ check\ if\ seat\ is\ booked\ by\ another\ person\r\n\ \ @param\ <row>\r\n\ \ @param\ <col>\r\n\ \ @return\ <true\ if\ seat\ is\ booked>\r\n
comment31.params=
comment31.target=boolean\ isOccupied()
comment31.text=\ \ \r\n\ \ This\ method\ is\ check\ if\ seat\ is\ booked\ by\ another\ person\r\n\ \ @return\ <true\ if\ seat\ is\ booked>\r\n
comment32.params=
comment32.target=boolean\ isIdentityVerified()
comment32.text=\ \ \r\n\ \ This\ method\ is\ to\ check\ if\ personal\ information\ and\ seat\ matches\ information\ in\ history\r\n\ \ @return\ <true\ if\ personal\ information\ and\ seat\ matches\ single\ information\ in\ history>\r\n
comment33.params=
comment33.target=boolean\ isSeatExist()
comment33.text=\ \ \r\n\ \ This\ method\ is\ to\ check\ if\ seat\ exists\r\n\ \ @return\ <true\ if\ seat\ exists>\r\n
comment34.params=tempCoordinateOfSeats
comment34.target=boolean\ isMatchSeatsInHistory(int[])
comment34.text=\ \ \r\n\ \ Function\ overload\r\n\ \ This\ method\ is\ to\ check\ if\ two\ seats\ are\ same\ one\r\n\ \ @param\ <tempCoordinateOfSeats\:\ row\ and\ column>\r\n\ \ @return\ <true\ if\ seat\ user\ chooses\ matches\ in\ history>\r\n
comment35.params=
comment35.target=boolean\ isMatchSeatsInHistory()
comment35.text=\ \ \r\n\ \ This\ method\ is\ to\ check\ if\ two\ seats\ are\ same\ one\r\n\ \ @return\ <true\ if\ seat\ user\ chooses\ matches\ in\ history>\r\n
comment36.params=
comment36.target=boolean\ hasNextHistory()
comment36.text=\ \ \r\n\ \ This\ method\ is\ to\ check\ if\ it\ reaches\ the\ last\ booking\ history\r\n\ \ @return\ <true\ if\ it\ has\ not\ reached\ the\ last\ booking\ history>\r\n
comment37.params=
comment37.target=boolean\ isUpdate()
comment37.text=\ \ \r\n\ \ This\ method\ is\ to\ check\ if\ it\ needs\ to\ update\ the\ information\ of\ booking\ reservation\r\n\ \ @return\ <true\ if\ there\ is\ any\ element\ in\ the\ history>\r\n
comment38.params=
comment38.target=boolean\ isAnyAvailable()
comment38.text=\ \ \r\n\ \ This\ method\ is\ to\ check\ if\ all\ seats\ are\ booked\r\n\ \ @return\ <true\ if\ number\ of\ booking\ less\ than\ the\ number\ of\ element\ in\ history>\r\n
comment39.params=
comment39.target=boolean\ isQuit()
comment39.text=\ \ \r\n\ \ This\ method\ is\ to\ check\ if\ user\ want\ to\ quit\r\n\ \ @return\ <true\ if\ user\ want\ to\ quit>\r\n
comment4.params=
comment4.target=void\ modifyMenuStart()
comment4.text=\ \ \r\n\ \ This\ method\ starts\ the\ sub\ menu\ for\ modify\ seats\r\n
comment5.params=
comment5.target=void\ cancelMenuStart()
comment5.text=\ \ \r\n\ \ This\ method\ starts\ the\ sub\ menu\ for\ cancel\ seats\r\n
comment6.params=
comment6.target=void\ bookMenuStart()
comment6.text=\ \ \r\n\ \ This\ method\ starts\ the\ sub\ menu\ for\ book\ seats\r\n
comment7.params=message
comment7.target=void\ actionMenuStart(java.lang.String)
comment7.text=\ \ \r\n\ \ This\ method\ is\ to\ get\ the\ user\ input\ of\ seat's\ position\r\n\ \ @param\ <message\:\ book,\ cancel\ and\ modify\ have\ different\ instruction\ sentences\ for\ user>\ \r\n
comment8.params=
comment8.target=void\ resetScreen()
comment8.text=\ \ \r\n\ \ This\ method\ is\ to\ flush\ the\ screen\ and\ update\ the\ information\r\n
comment9.params=
comment9.target=void\ searchSeat()
comment9.text=\r\n\ \ This\ method\ is\ to\ show\ the\ page\ after\ user\ enter\ their\ preference\ of\ seat\r\n
numComments=40
